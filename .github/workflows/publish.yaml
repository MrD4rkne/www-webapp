name: Deploy to Azure Web App

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install and build frontend assets
      run: |
        if [ -f package.json ]; then
          npm install
          npm run build
        fi

    - name: Run tests
      env:
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: hunter2
        DB_HOST: localhost
        DB_PORT: 5432
      run: |
        # Set up a temporary PostgreSQL database for testing
        docker run -d -p 5432:5432 -e POSTGRES_PASSWORD=hunter2 postgres:13
        # Wait for PostgreSQL to be ready
        sleep 10
        # Run tests
        python manage.py test

    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput

    - name: Generate deployment package
      run: |
        # Create a zip file containing all the necessary files
        zip -r deploy.zip . -x ".*" -x "__pycache__/*" -x "*.git*" -x "node_modules/*" -x "*.github/*"

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./deploy.zip

    - name: Run database migrations
      uses: azure/CLI@v1
      with:
        inlineScript: |
          # Run migrations through Azure App Service's SSH
          # You may need to adjust this based on your Azure setup
          az webapp ssh --name ${{ secrets.AZURE_WEBAPP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --command "cd site/wwwroot && python manage.py migrate"