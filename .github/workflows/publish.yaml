name: Deploy to Azure Web App

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install django  # Upewnij się, że Django jest zainstalowane

    - name: Install and build frontend assets
      run: |
        if [ -f package.json ]; then
          npm install
          npm run build
        fi

#    - name: Run tests
#      env:
#        DB_NAME: postgres
#        DB_USER: postgres
#        DB_PASSWORD: hunter2
#        DB_HOST: localhost
#        DB_PORT: 5432
#      run: |
#        docker run -d -p 5432:5432 -e POSTGRES_PASSWORD=hunter2 postgres:13
#        sleep 10
#        python manage.py test

    - name: Debug project structure
      run: |
        ls -la
        echo "Django version:"
        python -m django --version
        echo "Available management commands:"
        python manage.py help

    - name: Create static directory
      run: mkdir -p staticfiles

    - name: Modify settings for static files
      run: |
        # Znajdź główny plik settings.py
        SETTINGS_FILE=$(find . -name "settings.py" | head -n 1)
        if [ -n "$SETTINGS_FILE" ]; then
          echo "Found settings file: $SETTINGS_FILE"
          echo "import os" >> $SETTINGS_FILE
          echo "STATIC_ROOT = os.path.join(os.path.dirname(os.path.abspath(__file__)), '../staticfiles')" >> $SETTINGS_FILE
        else
          echo "OSTRZEŻENIE: Nie znaleziono pliku settings.py"
        fi

    - name: Collect static files (if command exists)
      run: |
        python -m django --help | grep collectstatic && python manage.py collectstatic --noinput || echo "Collectstatic command not available, skipping"

    - name: Generate deployment package
      run: |
        zip -r deploy.zip . -x ".*" -x "__pycache__/*" -x "*.git*" -x "node_modules/*" -x "*.github/*"

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./deploy.zip

    - name: Run database migrations
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az webapp ssh --name ${{ secrets.AZURE_WEBAPP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --command "cd site/wwwroot && python manage.py migrate"